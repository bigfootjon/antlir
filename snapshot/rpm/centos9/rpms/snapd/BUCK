# @generated
load("@antlir//antlir/antlir2/package_managers/dnf/rules:rpm.bzl", "rpm")
load("@antlir//antlir/antlir2/package_managers/dnf/rules:xml.bzl", "xml")
rpm(name='0-2.65.1-0.el9.x86_64-bb609', rpm_name='snapd', epoch=0, version='2.65.1', release='0.el9', arch='x86_64', url='https://mirror.facebook.net/fedora/epel/9/Everything/x86_64/Packages/s/snapd-2.65.1-0.el9.x86_64.rpm', xml=':0-2.65.1-0.el9.x86_64-bb609--xml', sha1=None, sha256='bb60912e93b6503bddce4d3ee7646bbda2813379718d6de6e45312e6fba4d393', visibility=['//snapshot/rpm/centos9/...'])
xml(name='0-2.65.1-0.el9.x86_64-bb609--xml', primary='<package type="rpm">\n  <name>snapd</name>\n  <arch>x86_64</arch>\n  <version epoch="0" ver="2.65.1" rel="0.el9"/>\n  <checksum type="sha256" pkgid="YES">bb60912e93b6503bddce4d3ee7646bbda2813379718d6de6e45312e6fba4d393</checksum>\n  <summary>A transactional software package manager</summary>\n  <description>Snappy is a modern, cross-distribution, transactional package manager\ndesigned for working with self-contained, immutable packages.</description>\n  <packager>Fedora Project</packager>\n  <url>https://github.com/snapcore/snapd</url>\n  <time file="1725535219" build="1725534476"/>\n  <size package="17865197" installed="58600098" archive="58613184"/>\n  <location href="Packages/bb60912e93b6503bddce4d3ee7646bbda2813379718d6de6e45312e6fba4d393/snapd-0:2.65.1-0.el9.x86_64.rpm"/>\n  <format>\n    <rpm:license>GPL-3.0-only</rpm:license>\n    <rpm:vendor>Fedora Project</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>buildhw-x86-10.iad2.fedoraproject.org</rpm:buildhost>\n    <rpm:sourcerpm>snapd-2.65.1-0.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="4504" end="81605"/>\n    <rpm:provides>\n      <rpm:entry name="application()"/>\n      <rpm:entry name="application(io.snapcraft.SessionAgent.desktop)"/>\n      <rpm:entry name="application(snap-handle-link.desktop)"/>\n      <rpm:entry name="config(snapd)" flags="EQ" epoch="0" ver="2.65.1" rel="0.el9"/>\n      <rpm:entry name="mimehandler(x-scheme-handler/snap)"/>\n      <rpm:entry name="snapd" flags="EQ" epoch="0" ver="2.65.1" rel="0.el9"/>\n      <rpm:entry name="snapd(x86-64)" flags="EQ" epoch="0" ver="2.65.1" rel="0.el9"/>\n    </rpm:provides>\n    <rpm:requires>\n      <rpm:entry name="((squashfuse and fuse) or kmod(squashfs.ko))"/>\n      <rpm:entry name="/bin/sh"/>\n      <rpm:entry name="/bin/sh" pre="1"/>\n      <rpm:entry name="/bin/sh"/>\n      <rpm:entry name="/usr/bin/bash"/>\n      <rpm:entry name="/usr/bin/sh"/>\n      <rpm:entry name="bash-completion"/>\n      <rpm:entry name="libresolv.so.2()(64bit)"/>\n      <rpm:entry name="rtld(GNU_HASH)"/>\n      <rpm:entry name="snap-confine(x86-64)" flags="EQ" epoch="0" ver="2.65.1" rel="0.el9"/>\n      <rpm:entry name="snapd-selinux" flags="EQ" epoch="0" ver="2.65.1" rel="0.el9"/>\n      <rpm:entry name="squashfs-tools"/>\n      <rpm:entry name="systemd" pre="1"/>\n      <rpm:entry name="systemd"/>\n      <rpm:entry name="xdelta"/>\n      <rpm:entry name="libc.so.6(GLIBC_2.34)(64bit)"/>\n    </rpm:requires>\n    <file>/etc/profile.d/snapd.sh</file>\n    <file>/etc/sysconfig/snapd</file>\n    <file>/etc/xdg/autostart/snap-userd-autostart.desktop</file>\n    <file>/usr/bin/snap</file>\n    <file>/usr/bin/snapctl</file>\n  </format>\n</package>\n', filelists='<package pkgid="bb60912e93b6503bddce4d3ee7646bbda2813379718d6de6e45312e6fba4d393" name="snapd" arch="x86_64">\n  <version epoch="0" ver="2.65.1" rel="0.el9"/>\n  <file>/etc/profile.d/snapd.sh</file>\n  <file>/etc/sysconfig/snapd</file>\n  <file>/etc/xdg/autostart/snap-userd-autostart.desktop</file>\n  <file>/usr/bin/snap</file>\n  <file>/usr/bin/snapctl</file>\n  <file type="dir">/usr/lib/.build-id</file>\n  <file type="dir">/usr/lib/.build-id/02</file>\n  <file>/usr/lib/.build-id/02/8e03bb1298504cac64b66c3552357568c0c76d</file>\n  <file type="dir">/usr/lib/.build-id/05</file>\n  <file>/usr/lib/.build-id/05/d7c7cbc16d2a0907ae280573f2e1bc1ae860e9</file>\n  <file type="dir">/usr/lib/.build-id/36</file>\n  <file>/usr/lib/.build-id/36/fa5417c02f9585ceaaa13dacbfb84a33c07443</file>\n  <file type="dir">/usr/lib/.build-id/8b</file>\n  <file>/usr/lib/.build-id/8b/674727ff3d660a7b155c6ba1fcbad1d77da99a</file>\n  <file type="dir">/usr/lib/.build-id/bd</file>\n  <file>/usr/lib/.build-id/bd/c02835fb125a92c4c07a4d9898211934a6985f</file>\n  <file type="dir">/usr/lib/.build-id/f8</file>\n  <file>/usr/lib/.build-id/f8/d114e4d765eb16811d23ca4c2c0a9c30927ff5</file>\n  <file>/usr/lib/environment.d/990-snapd.conf</file>\n  <file>/usr/lib/systemd/system-environment-generators/snapd-env-generator</file>\n  <file>/usr/lib/systemd/system/snapd.autoimport.service</file>\n  <file>/usr/lib/systemd/system/snapd.failure.service</file>\n  <file>/usr/lib/systemd/system/snapd.mounts-pre.target</file>\n  <file>/usr/lib/systemd/system/snapd.mounts.target</file>\n  <file>/usr/lib/systemd/system/snapd.seeded.service</file>\n  <file>/usr/lib/systemd/system/snapd.service</file>\n  <file>/usr/lib/systemd/system/snapd.socket</file>\n  <file>/usr/lib/systemd/user/snapd.session-agent.service</file>\n  <file>/usr/lib/systemd/user/snapd.session-agent.socket</file>\n  <file>/usr/lib/tmpfiles.d/snapd.conf</file>\n  <file type="dir">/usr/libexec/snapd</file>\n  <file>/usr/libexec/snapd/complete.sh</file>\n  <file>/usr/libexec/snapd/etelpmoc.sh</file>\n  <file>/usr/libexec/snapd/info</file>\n  <file>/usr/libexec/snapd/snap-exec</file>\n  <file>/usr/libexec/snapd/snap-failure</file>\n  <file>/usr/libexec/snapd/snap-mgmt</file>\n  <file>/usr/libexec/snapd/snap-mgmt-selinux</file>\n  <file>/usr/libexec/snapd/snapctl</file>\n  <file>/usr/libexec/snapd/snapd</file>\n  <file>/usr/libexec/snapd/snapd.run-from-snap</file>\n  <file>/usr/share/applications/io.snapcraft.SessionAgent.desktop</file>\n  <file>/usr/share/applications/snap-handle-link.desktop</file>\n  <file>/usr/share/bash-completion/completions/snap</file>\n  <file>/usr/share/dbus-1/services/io.snapcraft.Launcher.service</file>\n  <file>/usr/share/dbus-1/services/io.snapcraft.SessionAgent.service</file>\n  <file>/usr/share/dbus-1/services/io.snapcraft.Settings.service</file>\n  <file>/usr/share/dbus-1/session.d/snapd.session-services.conf</file>\n  <file>/usr/share/dbus-1/system.d/snapd.system-services.conf</file>\n  <file type="dir">/usr/share/doc/snapd</file>\n  <file>/usr/share/doc/snapd/MOVED.md</file>\n  <file>/usr/share/doc/snapd/README.md</file>\n  <file>/usr/share/doc/snapd/error-kinds.go</file>\n  <file type="dir">/usr/share/fish/vendor_conf.d</file>\n  <file>/usr/share/fish/vendor_conf.d/snapd.fish</file>\n  <file type="dir">/usr/share/licenses/snapd</file>\n  <file>/usr/share/licenses/snapd/COPYING</file>\n  <file>/usr/share/man/man8/snap.8.gz</file>\n  <file>/usr/share/man/man8/snapd-env-generator.8.gz</file>\n  <file>/usr/share/polkit-1/actions/io.snapcraft.snapd.policy</file>\n  <file>/usr/share/snapd/snapcraft-logo-bird.svg</file>\n  <file type="dir">/usr/share/zsh</file>\n  <file type="dir">/usr/share/zsh/site-functions</file>\n  <file>/usr/share/zsh/site-functions/_snap</file>\n  <file type="dir">/var/cache/snapd</file>\n  <file type="dir">/var/lib/snapd</file>\n  <file type="dir">/var/lib/snapd/assertions</file>\n  <file type="dir">/var/lib/snapd/cgroup</file>\n  <file type="dir">/var/lib/snapd/cookie</file>\n  <file type="dir">/var/lib/snapd/dbus-1</file>\n  <file type="dir">/var/lib/snapd/dbus-1/services</file>\n  <file type="dir">/var/lib/snapd/dbus-1/system-services</file>\n  <file type="dir">/var/lib/snapd/desktop</file>\n  <file type="dir">/var/lib/snapd/desktop/applications</file>\n  <file type="dir">/var/lib/snapd/device</file>\n  <file type="dir">/var/lib/snapd/hostfs</file>\n  <file type="dir">/var/lib/snapd/inhibit</file>\n  <file type="dir">/var/lib/snapd/lib</file>\n  <file type="dir">/var/lib/snapd/lib/gl</file>\n  <file type="dir">/var/lib/snapd/lib/gl32</file>\n  <file type="dir">/var/lib/snapd/lib/glvnd</file>\n  <file type="dir">/var/lib/snapd/lib/vulkan</file>\n  <file type="dir">/var/lib/snapd/mount</file>\n  <file type="dir">/var/lib/snapd/seccomp</file>\n  <file type="dir">/var/lib/snapd/seccomp/bpf</file>\n  <file type="dir">/var/lib/snapd/snap</file>\n  <file type="ghost">/var/lib/snapd/snap/README</file>\n  <file type="dir">/var/lib/snapd/snap/bin</file>\n  <file type="dir">/var/lib/snapd/snaps</file>\n  <file type="ghost">/var/lib/snapd/state.json</file>\n  <file type="dir">/var/snap</file>\n</package>\n', other='<package pkgid="bb60912e93b6503bddce4d3ee7646bbda2813379718d6de6e45312e6fba4d393" name="snapd" arch="x86_64">\n  <version epoch="0" ver="2.65.1" rel="0.el9"/>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1708084800">- New upstream release 2.61.2\n - Fix to enable plug/slot sanitization for prepare-image\n - Fix panic when device-service.access=offline\n - Support offline remodeling\n - Allow offline update only remodels without serial\n - Fail early when remodeling to old model revision\n - Fix to enable plug/slot sanitization for validate-seed\n - Allow removal of core snap on classic systems\n - Fix network-control interface denial for file lock on /run/netns\n - Add well-known core24 snap-id\n - Fix remodel snap installation order\n - Prevent remodeling from UC18+ to UC16\n - Fix cups auto-connect on classic with cups snap installed\n - u2f-devices interface support for GoTrust Idem Key with USB-C\n - Fix to restore services after unlink failure\n - Add libcudnn.so to Nvidia libraries\n - Fix skipping base snap download due to false snapd downgrade\n   conflict</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1709726400">- New upstream release 2.61.3\n - Install systemd files in correct location for 24.04</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1711022400">- New upstream release 2.62\n - Aspects based configuration schema support (experimental)\n - Refresh app awareness support for UI (experimental)\n - Support for user daemons by introducing new control switches\n   --user/--system/--users for service start/stop/restart\n   (experimental)\n - Add AppArmor prompting experimental flag (feature currently\n   unsupported)\n - Installation of local snap components of type test\n - Packaging of components with snap pack\n - Expose experimental features supported/enabled in snapd REST API\n   endpoint /v2/system-info\n - Support creating and removing recovery systems for use by factory\n   reset\n - Enable API route for creating and removing recovery systems using\n   /v2/systems with action create and /v2/systems/{label} with action\n   remove\n - Lift requirements for fde-setup hook for single boot install\n - Enable single reboot gadget update for UC20+\n - Allow core to be removed on classic systems\n - Support for remodeling on hybrid systems\n - Install desktop files on Ubuntu Core and update after snapd\n   upgrade\n - Upgrade sandbox features to account for cgroup v2 device filtering\n - Support snaps to manage their own cgroups\n - Add support for AppArmor 4.0 unconfined profile mode\n - Add AppArmor based read access to /etc/default/keyboard\n - Upgrade to squashfuse 0.5.0\n - Support useradd utility to enable removing Perl dependency for\n   UC24+\n - Support for recovery-chooser to use console-conf snap\n - Add support for --uid/--gid using strace-static\n - Add support for notices (from pebble) and expose via the snapd\n   REST API endpoints /v2/notices and /v2/notice\n - Add polkit authentication for snapd REST API endpoints\n   /v2/snaps/{snap}/conf and /v2/apps\n - Add refresh-inhibit field to snapd REST API endpoint /v2/snaps\n - Add refresh-inhibited select query to REST API endpoint /v2/snaps\n - Take into account validation sets during remodeling\n - Improve offline remodeling to use installed revisions of snaps to\n   fulfill the remodel revision requirement\n - Add rpi configuration option sdtv_mode\n - When snapd snap is not installed, pin policy ABI to 4.0 or 3.0 if\n   present on host\n - Fix gadget zero-sized disk mapping caused by not ignoring zero\n   sized storage traits\n - Fix gadget install case where size of existing partition was not\n   correctly taken into account\n - Fix trying to unmount early kernel mount if it does not exist\n - Fix restarting mount units on snapd start\n - Fix call to udev in preseed mode\n - Fix to ensure always setting up the device cgroup for base bare\n   and core24+\n - Fix not copying data from newly set homedirs on revision change\n - Fix leaving behind empty snap home directories after snap is\n   removed (resulting in broken symlink)\n - Fix to avoid using libzstd from host by adding to snapd snap\n - Fix autorefresh to correctly handle forever refresh hold\n - Fix username regex allowed for system-user assertion to not allow\n   \'+\'\n - Fix incorrect application icon for notification after autorefresh\n   completion\n - Fix to restart mount units when changed\n - Fix to support AppArmor running under incus\n - Fix case of snap-update-ns dropping synthetic mounts due to\n   failure to match  desired mount dependencies\n - Fix parsing of base snap version to enable pre-seeding of Ubuntu\n   Core Desktop\n - Fix packaging and tests for various distributions\n - Add remoteproc interface to allow developers to interact with\n   Remote Processor Framework which enables snaps to load firmware to\n   ARM Cortex microcontrollers\n - Add kernel-control interface to enable controlling the kernel\n   firmware search path\n - Add nfs-mount interface to allow mounting of NFS shares\n - Add ros-opt-data interface to allow snaps to access the host\n   /opt/ros/ paths\n - Add snap-refresh-observe interface that provides refresh-app-\n   awareness clients access to relevant snapd API endpoints\n - steam-support interface: generalize Pressure Vessel root paths and\n   allow access to driver information, features and container\n   versions\n - steam-support interface: make implicit on Ubuntu Core Desktop\n - desktop interface: improved support for Ubuntu Core Desktop and\n   limit autoconnection to implicit slots\n - cups-control interface: make autoconnect depend on presence of\n   cupsd on host to ensure it works on classic systems\n - opengl interface: allow read access to /usr/share/nvidia\n - personal-files interface: extend to support automatic creation of\n   missing parent directories in write paths\n - network-control interface: allow creating /run/resolveconf\n - network-setup-control and network-setup-observe interfaces: allow\n   busctl bind as required for systemd 254+\n - libvirt interface: allow r/w access to /run/libvirt/libvirt-sock-\n   ro and read access to /var/lib/libvirt/dnsmasq/**\n - fwupd interface: allow access to IMPI devices (including locking\n   of device nodes), sysfs attributes needed by amdgpu and the COD\n   capsule update directory\n - uio interface: allow configuring UIO drivers from userspace\n   libraries\n - serial-port interface: add support for NXP Layerscape SoC\n - lxd-support interface: add attribute enable-unconfined-mode to\n   require LXD to opt-in to run unconfined\n - block-devices interface: add support for ZFS volumes\n - system-packages-doc interface: add support for reading jquery and\n   sphinx documentation\n - system-packages-doc interface: workaround to prevent autoconnect\n   failure for snaps using base bare\n - microceph-support interface: allow more types of block devices to\n   be added as an OSD\n - mount-observe interface: allow read access to\n   /proc/{pid}/task/{tid}/mounts and proc/{pid}/task/{tid}/mountinfo\n - polkit interface: changed to not be implicit on core because\n   installing policy files is not possible\n - upower-observe interface: allow stats refresh\n - gpg-public-keys interface: allow creating lock file for certain\n   gpg operations\n - shutdown interface: allow access to SetRebootParameter method\n - media-control interface: allow device file locking\n - u2f-devices interface: support for Trustkey G310H, JaCarta U2F,\n   Kensington VeriMark Guard, RSA DS100, Google Titan v2</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1713960000">- New upstream release 2.63\n - Support for snap services to show the current status of user\n   services (experimental)\n - Refresh app awareness: record snap-run-inhibit notice when\n   starting app from snap that is busy with refresh (experimental)\n - Refresh app awareness: use warnings as fallback for desktop\n   notifications (experimental)\n - Aspect based configuration: make request fields in the aspect-\n   bundle\'s rules optional (experimental)\n - Aspect based configuration: make map keys conform to the same\n   format as path sub-keys (experimental)\n - Aspect based configuration: make unset and set behaviour similar\n   to configuration options (experimental)\n - Aspect based configuration: limit nesting level for setting value\n   (experimental)\n - Components: use symlinks to point active snap component revisions\n - Components: add model assertion support for components\n - Components: fix to ensure local component installation always gets\n   a new revision number\n - Add basic support for a CIFS remote filesystem-based home\n   directory\n - Add support for AppArmor profile kill mode to avoid snap-confine\n   error\n - Allow more than one interface to grant access to the same API\n   endpoint or notice type\n - Allow all snapd service\'s control group processes to send systemd\n   notifications to prevent warnings flooding the log\n - Enable not preseeded single boot install\n - Update secboot to handle new sbatlevel\n - Fix to not use cgroup for non-strict confined snaps (devmode,\n   classic)\n - Fix two race conditions relating to freedesktop notifications\n - Fix missing tunables in snap-update-ns AppArmor template\n - Fix rejection of snapd snap udev command line by older host snap-\n   device-helper\n - Rework seccomp allow/deny list\n - Clean up files removed by gadgets\n - Remove non-viable boot chains to avoid secboot failure\n - posix_mq interface: add support for missing time64 mqueue syscalls\n   mq_timedreceive_time64 and mq_timedsend_time64\n - password-manager-service interface: allow kwalletd version 6\n - kubernetes-support interface: allow SOCK_SEQPACKET sockets\n - system-observe interface: allow listing systemd units and their\n   properties\n - opengl interface: enable use of nvidia container toolkit CDI\n   config generation</changelog>\n  <changelog author="Fedora Release Engineering &lt;releng@fedoraproject.org&gt; - 2.63-1" date="1721476800">- Rebuilt for https://fedoraproject.org/wiki/Fedora_41_Mass_Rebuild</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1721822400">- New upstream release 2.64\n - Support building snapd using base Core22 (Snapcraft 8.x)\n - FIPS: support building FIPS complaint snapd variant that switches\n   to FIPS mode when the system boots with FIPS enabled\n - AppArmor: update to AppArmor 4.0.1\n - AppArmor: support AppArmor snippet priorities\n - AppArmor prompting: add checks for prompting support, include\n   prompting status in system key, and restart snapd if prompting\n   flag changes\n - AppArmor prompting: include prompt prefix in AppArmor rules if\n   prompting is supported and enabled\n - AppArmor prompting: add common types, constraints, and mappings\n   from AppArmor permissions to abstract permissions\n - AppArmor prompting: add path pattern parsing and matching\n - Registry views (experimental): rename from aspects to registries\n - Registry views (experimental): support reading registry views\n   using snapctl\n - Registry views (experimental): restrict view paths from using a\n   number as first character and view names to storage path style\n   patterns\n - Snap components: support installing snaps and components from\n   files at the same time (no REST API/CLI)\n - Snap components: support downloading components related assertions\n   from the store\n - Snap components: support installing components from the store (no\n   REST API/CLI)\n - Snap components: support removing components (REST API, no CLI)\n - Snap components: started support for component hooks\n - Snap components: support kernel modules as components\n - Refresh app awareness (experimental): add data field for\n   /v2/changes REST API to allow associating each task with affected\n   snaps\n - Refresh app awareness (experimental): use the app name from\n   .desktop file in notifications\n - Refresh app awareness (experimental): give snap-refresh-observe\n   interface access to /v2/snaps/{name} endpoint\n - Allow re-exec when SNAP_REEXEC is set for unlisted distros to\n   simplify testing\n - Generate GNU build ID for Go binaries\n - Add missing etelpmoc.sh for shell completion\n - Do not attempt to run snapd on classic when re-exec is disabled\n - Packaging/build maintenance for Debian sid, Fedora, Arch, openSuse\n - Add snap debug api command to enable running raw queries\n - Enable snap-confine snap mount directory detection\n - Replace global seccomp filter with deny rules in standard seccomp\n   template\n - Remove support for Ubuntu Core Launcher (superseded by snap-\n   confine)\n - Support creating pending serial bound users after serial assertion\n   becomes available\n - Support disabling cloud-init using kernel command-line\n - In hybrid systems, apps can refresh without waiting for restarts\n   required by essential snaps\n - Ship snap-debug-info.sh script used for system diagnostics\n - Improve error messages when attempting to run non-existent snap\n - Switch to -u UID:GID for strace-static\n - Support enabling snapd logging with snap set system\n   debug.snapd.{log,log-level}\n - Fix restarting activated services instead of their activator units\n   (i.e. sockets, timers)\n - Fix potential unexpected auto-refresh of snap on managed schedule\n - Fix potential segfault by guarding against kernel command-line\n   changes on classic system\n - Fix proxy entries in /etc/environment with missing newline that\n   caused later manual entries to not be usable\n - Fix offline remodelling by ignoring prerequisites that will\n   otherwise be downloaded from store\n - Fix devmode seccomp deny regression that caused spamming the log\n   instead of actual denies\n - Fix snap lock leak during refresh\n - Fix not re-pinning validation sets that were already pinned when\n   enforcing new validation sets\n - Fix handling of unexpected snapd runtime failure\n - Fix /v2/notices REST API skipping notices with duplicate\n   timestamps\n - Fix comparing systemd versions that may contain pre-release\n   suffixes\n - Fix udev potentially starting before snap-device-helper is made\n   available\n - Fix race in snap seed metadata loading\n - Fix treating cloud-init exit status 2 as error\n - Fix to prevent sending refresh complete notification if snap snap-\n   refresh-observe interface is connected\n - Fix to queue snapctl service commands if run from the default-\n   configure hook to ensure they get up-to-date config values\n - Fix stop service failure when the service is not actually running\n   anymore\n - Add registry interface that provides snaps access to a particular\n   registry view\n - steam-support interface: relaxed AppArmor and seccomp restrictions\n   to improve user experience\n - home interface: autoconnect home on Ubuntu Core Desktop\n - serial-port interface: support RPMsg tty\n - display-control interface: allow changing LVDS backlight power and\n   brightness\n - power-control interface: support for battery charging thesholds,\n   type/status and AC type/status\n - cpu-control interface: allow CPU C-state control\n - raw-usb interface: support RPi5 and Thinkpad x13s\n - custom-device interface: allow device file locking\n - lxd-support interface: allow LXD to self-manage its own cgroup\n - network-manager interface: support MPTCP sockets\n - network-control interface: allow plug/slot access to gnutls config\n   and systemd resolved cache flushing via D-Bus</changelog>\n  <changelog author="Miroslav Such&#xFD; &lt;msuchy@redhat.com&gt; - 2.63-2" date="1721995200">- convert license to SPDX</changelog>\n  <changelog author="Miroslav Such&#xFD; &lt;msuchy@redhat.com&gt; - 2.63-3" date="1722254400">- convert license to SPDX</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1724414400">- New upstream release 2.65\n - Support building snapd using base Core22 (Snapcraft 8.x)\n - FIPS: support building FIPS complaint snapd variant that switches\n   to FIPS mode when the system boots with FIPS enabled\n - AppArmor: update to latest 4.0.2 release\n - AppArmor: enable using ABI 4.0 from host parser\n - AppArmor: fix parser lookup\n - AppArmor: support AppArmor snippet priorities\n - AppArmor: allow reading cgroup memory.max file\n - AppArmor: allow using snap-exec coming from the snapd snap when\n   starting a confined process with jailmode\n - AppArmor prompting (experimental): add checks for prompting\n   support, include prompting status in system key, and restart snapd\n   if prompting flag changes\n - AppArmor prompting (experimental): include prompt prefix in\n   AppArmor rules if prompting is supported and enabled\n - AppArmor prompting (experimental): add common types, constraints,\n   and mappings from AppArmor permissions to abstract permissions\n - AppArmor prompting (experimental): add path pattern parsing and\n   matching\n - AppArmor prompting (experimental): add path pattern precedence\n   based on specificity\n - AppArmor prompting (experimental): add packages to manage\n   outstanding request prompts and rules\n - AppArmor prompting (experimental): add prompting API and notice\n   types, which require snap-interfaces-requests-control interface\n - AppArmor prompting (experimental): feature flag can only be\n   enabled if prompting is supported, handler service connected, and\n   the service can be started\n - Registry views (experimental): rename from aspects to registries\n - Registry views (experimental): support reading registry views and\n   setting/unsetting registry data using snapctl\n - Registry views (experimental): fetch and refresh registry\n   assertions as needed\n - Registry views (experimental): restrict view paths from using a\n   number as first character and view names to storage path style\n   patterns\n - Snap components: support installing snaps and components from\n   files at the same time (no REST API/CLI)\n - Snap components: support downloading components related assertions\n   from the store\n - Snap components: support installing components from the store\n - Snap components: support removing components individually and\n   during snap removal\n - Snap components: support kernel modules as components\n - Snap components: support for component install, pre-refresh and\n   post-refresh hooks\n - Snap components: initial support for building systems that contain\n   components\n - Refresh app awareness (experimental): add data field for\n   /v2/changes REST API to allow associating each task with affected\n   snaps\n - Refresh app awareness (experimental): use the app name from\n   .desktop file in notifications\n - Refresh app awareness (experimental): give snap-refresh-observe\n   interface access to /v2/snaps/{name} endpoint\n - Improve snap-confine compatibility with nvidia drivers\n - Allow re-exec when SNAP_REEXEC is set for unlisted distros to\n   simplify testing\n - Allow mixing revision and channel on snap install\n - Generate GNU build ID for Go binaries\n - Add missing etelpmoc.sh for shell completion\n - Do not attempt to run snapd on classic when re-exec is disabled\n - Packaging/build maintenance for Debian sid, Fedora, Arch, openSuse\n - Add snap debug API command to enable running raw queries\n - Enable snap-confine snap mount directory detection\n - Replace global seccomp filter with deny rules in standard seccomp\n   template\n - Remove support for Ubuntu Core Launcher (superseded by snap-\n   confine)\n - Support creating pending serial bound users after serial assertion\n   becomes available\n - Support disabling cloud-init using kernel command-line\n - In hybrid systems, apps can refresh without waiting for restarts\n   required by essential snaps\n - Ship snap-debug-info.sh script used for system diagnostics\n - Improve error messages when attempting to run non-existent snap\n - Switch to -u UID:GID for strace-static\n - Support enabling snapd logging with snap set system\n   debug.snapd.{log,log-level}\n - Add options system.coredump.enable and system.coredump.maxuse to\n   support using systemd-coredump on Ubuntu Core\n - Provide documentation URL for \'snap interface \'\n - Fix restarting activated services instead of their activator units\n   (i.e. sockets, timers)\n - Fix potential unexpected auto-refresh of snap on managed schedule\n - Fix potential segfault by guarding against kernel command-line\n   changes on classic system\n - Fix proxy entries in /etc/environment with missing newline that\n   caused later manual entries to not be usable\n - Fix offline remodelling by ignoring prerequisites that will\n   otherwise be downloaded from store\n - Fix devmode seccomp deny regression that caused spamming the log\n   instead of actual denies\n - Fix snap lock leak during refresh\n - Fix not re-pinning validation sets that were already pinned when\n   enforcing new validation sets\n - Fix handling of unexpected snapd runtime failure\n - Fix /v2/notices REST API skipping notices with duplicate\n   timestamps\n - Fix comparing systemd versions that may contain pre-release\n   suffixes\n - Fix udev potentially starting before snap-device-helper is made\n   available\n - Fix race in snap seed metadata loading\n - Fix treating cloud-init exit status 2 as error\n - Fix to prevent sending refresh complete notification if snap snap-\n   refresh-observe interface is connected\n - Fix to queue snapctl service commands if run from the default-\n   configure hook to ensure they get up-to-date config values\n - Fix stop service failure when the service is not actually running\n   anymore\n - Fix parsing /proc/PID/mounts with spaces\n - Add registry interface that provides snaps access to a particular\n   registry view\n - Add snap-interfaces-requests-control interface to enable prompting\n   client snaps\n - steam-support interface: remove all AppArmor and seccomp\n   restrictions to improve user experience\n - opengl interface: improve compatibility with nvidia drivers\n - home interface: autoconnect home on Ubuntu Core Desktop\n - serial-port interface: support RPMsg tty\n - display-control interface: allow changing LVDS backlight power and\n   brightness\n - power-control interface: support for battery charging thesholds,\n   type/status and AC type/status\n - cpu-control interface: allow CPU C-state control\n - raw-usb interface: support RPi5 and Thinkpad x13s\n - custom-device interface: allow device file locking\n - lxd-support interface: allow LXD to self-manage its own cgroup\n - network-manager interface: support MPTCP sockets\n - network-control interface: allow plug/slot access to gnutls config\n   and systemd resolved cache flushing via D-Bus\n - network-control interface: allow wpa_supplicant dbus api\n - gpio-control interface: support gpiochip* devices\n - polkit interface: fix "rw" mount option check\n - u2f-devices interface: enable additional security keys\n - desktop interface: enable kde theming support</changelog>\n  <changelog author="Ernest Lotter &lt;ernest.lotter@canonical.com&gt;" date="1724500800">- New upstream release 2.65.1\n - Support building snapd using base Core22 (Snapcraft 8.x)\n - FIPS: support building FIPS complaint snapd variant that switches\n   to FIPS mode when the system boots with FIPS enabled\n - AppArmor: update to latest 4.0.2 release\n - AppArmor: enable using ABI 4.0 from host parser\n - AppArmor: fix parser lookup\n - AppArmor: support AppArmor snippet priorities\n - AppArmor: allow reading cgroup memory.max file\n - AppArmor: allow using snap-exec coming from the snapd snap when\n   starting a confined process with jailmode\n - AppArmor prompting (experimental): add checks for prompting\n   support, include prompting status in system key, and restart snapd\n   if prompting flag changes\n - AppArmor prompting (experimental): include prompt prefix in\n   AppArmor rules if prompting is supported and enabled\n - AppArmor prompting (experimental): add common types, constraints,\n   and mappings from AppArmor permissions to abstract permissions\n - AppArmor prompting (experimental): add path pattern parsing and\n   matching\n - AppArmor prompting (experimental): add path pattern precedence\n   based on specificity\n - AppArmor prompting (experimental): add packages to manage\n   outstanding request prompts and rules\n - AppArmor prompting (experimental): add prompting API and notice\n   types, which require snap-interfaces-requests-control interface\n - AppArmor prompting (experimental): feature flag can only be\n   enabled if prompting is supported, handler service connected, and\n   the service can be started\n - Registry views (experimental): rename from aspects to registries\n - Registry views (experimental): support reading registry views and\n   setting/unsetting registry data using snapctl\n - Registry views (experimental): fetch and refresh registry\n   assertions as needed\n - Registry views (experimental): restrict view paths from using a\n   number as first character and view names to storage path style\n   patterns\n - Snap components: support installing snaps and components from\n   files at the same time (no REST API/CLI)\n - Snap components: support downloading components related assertions\n   from the store\n - Snap components: support installing components from the store\n - Snap components: support removing components individually and\n   during snap removal\n - Snap components: support kernel modules as components\n - Snap components: support for component install, pre-refresh and\n   post-refresh hooks\n - Snap components: initial support for building systems that contain\n   components\n - Refresh app awareness (experimental): add data field for\n   /v2/changes REST API to allow associating each task with affected\n   snaps\n - Refresh app awareness (experimental): use the app name from\n   .desktop file in notifications\n - Refresh app awareness (experimental): give snap-refresh-observe\n   interface access to /v2/snaps/{name} endpoint\n - Improve snap-confine compatibility with nvidia drivers\n - Allow re-exec when SNAP_REEXEC is set for unlisted distros to\n   simplify testing\n - Allow mixing revision and channel on snap install\n - Generate GNU build ID for Go binaries\n - Add missing etelpmoc.sh for shell completion\n - Do not attempt to run snapd on classic when re-exec is disabled\n - Packaging/build maintenance for Debian sid, Fedora, Arch, openSuse\n - Add snap debug API command to enable running raw queries\n - Enable snap-confine snap mount directory detection\n - Replace global seccomp filter with deny rules in standard seccomp\n   template\n - Remove support for Ubuntu Core Launcher (superseded by snap-\n   confine)\n - Support creating pending serial bound users after serial assertion\n   becomes available\n - Support disabling cloud-init using kernel command-line\n - In hybrid systems, apps can refresh without waiting for restarts\n   required by essential snaps\n - Ship snap-debug-info.sh script used for system diagnostics\n - Improve error messages when attempting to run non-existent snap\n - Switch to -u UID:GID for strace-static\n - Support enabling snapd logging with snap set system\n   debug.snapd.{log,log-level}\n - Add options system.coredump.enable and system.coredump.maxuse to\n   support using systemd-coredump on Ubuntu Core\n - Provide documentation URL for \'snap interface \'\n - Fix snapd riscv64 build\n - Fix restarting activated services instead of their activator units\n   (i.e. sockets, timers)\n - Fix potential unexpected auto-refresh of snap on managed schedule\n - Fix potential segfault by guarding against kernel command-line\n   changes on classic system\n - Fix proxy entries in /etc/environment with missing newline that\n   caused later manual entries to not be usable\n - Fix offline remodelling by ignoring prerequisites that will\n   otherwise be downloaded from store\n - Fix devmode seccomp deny regression that caused spamming the log\n   instead of actual denies\n - Fix snap lock leak during refresh\n - Fix not re-pinning validation sets that were already pinned when\n   enforcing new validation sets\n - Fix handling of unexpected snapd runtime failure\n - Fix /v2/notices REST API skipping notices with duplicate\n   timestamps\n - Fix comparing systemd versions that may contain pre-release\n   suffixes\n - Fix udev potentially starting before snap-device-helper is made\n   available\n - Fix race in snap seed metadata loading\n - Fix treating cloud-init exit status 2 as error\n - Fix to prevent sending refresh complete notification if snap snap-\n   refresh-observe interface is connected\n - Fix to queue snapctl service commands if run from the default-\n   configure hook to ensure they get up-to-date config values\n - Fix stop service failure when the service is not actually running\n   anymore\n - Fix parsing /proc/PID/mounts with spaces\n - Add registry interface that provides snaps access to a particular\n   registry view\n - Add snap-interfaces-requests-control interface to enable prompting\n   client snaps\n - steam-support interface: remove all AppArmor and seccomp\n   restrictions to improve user experience\n - opengl interface: improve compatibility with nvidia drivers\n - home interface: autoconnect home on Ubuntu Core Desktop\n - serial-port interface: support RPMsg tty\n - display-control interface: allow changing LVDS backlight power and\n   brightness\n - power-control interface: support for battery charging thesholds,\n   type/status and AC type/status\n - cpu-control interface: allow CPU C-state control\n - raw-usb interface: support RPi5 and Thinkpad x13s\n - custom-device interface: allow device file locking\n - lxd-support interface: allow LXD to self-manage its own cgroup\n - network-manager interface: support MPTCP sockets\n - network-control interface: allow plug/slot access to gnutls config\n   and systemd resolved cache flushing via D-Bus\n - network-control interface: allow wpa_supplicant dbus api\n - gpio-control interface: support gpiochip* devices\n - polkit interface: fix "rw" mount option check\n - u2f-devices interface: enable additional security keys\n - desktop interface: enable kde theming support</changelog>\n</package>\n')
