# @generated
load("@antlir//antlir/antlir2/package_managers/dnf/rules:rpm.bzl", "rpm")
load("@antlir//antlir/antlir2/package_managers/dnf/rules:xml.bzl", "xml")
rpm(name='0-0_20241009git669c882-1.el9.noarch-53904', rpm_name='pythoncapi-compat-devel', epoch=0, version='0^20241009git669c882', release='1.el9', arch='noarch', url='https://mirror.facebook.net/fedora/epel/9/Everything/x86_64/Packages/p/pythoncapi-compat-devel-0^20241009git669c882-1.el9.noarch.rpm', xml=':0-0_20241009git669c882-1.el9.noarch-53904--xml', sha1=None, sha256='53904ab8f430da71cf506f6e6b1a6bb0a1589fdca7c0853affd2c66494d2e0dd', visibility=['//snapshot/rpm/centos9/...'])
xml(name='0-0_20241009git669c882-1.el9.noarch-53904--xml', primary='<package type="rpm">\n  <name>pythoncapi-compat-devel</name>\n  <arch>noarch</arch>\n  <version epoch="0" ver="0^20241009git669c882" rel="1.el9"/>\n  <checksum type="sha256" pkgid="YES">53904ab8f430da71cf506f6e6b1a6bb0a1589fdca7c0853affd2c66494d2e0dd</checksum>\n  <summary>Python C API compatibility</summary>\n  <description>The pythoncapi-compat project can be used to write a C or C++ extension\nsupporting a wide range of Python versions with a single code base. It is made\nof the pythoncapi_compat.h header file and the upgrade_pythoncapi.py script.\n\nThis package provides the compatibility header library pythoncapi_compat.h.</description>\n  <packager>Fedora Project</packager>\n  <url>https://github.com/python/pythoncapi-compat</url>\n  <time file="1728573823" build="1728564053"/>\n  <size package="22518" installed="46060" archive="46652"/>\n  <location href="Packages/53904ab8f430da71cf506f6e6b1a6bb0a1589fdca7c0853affd2c66494d2e0dd/pythoncapi-compat-devel-0:0^20241009git669c882-1.el9.noarch.rpm"/>\n  <format>\n    <rpm:license>0BSD</rpm:license>\n    <rpm:vendor>Fedora Project</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>buildvm-a64-24.iad2.fedoraproject.org</rpm:buildhost>\n    <rpm:sourcerpm>pythoncapi-compat-0^20241009git669c882-1.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="4504" end="13529"/>\n    <rpm:provides>\n      <rpm:entry name="pythoncapi-compat-devel" flags="EQ" epoch="0" ver="0^20241009git669c882" rel="1.el9"/>\n      <rpm:entry name="pythoncapi-compat-static" flags="EQ" epoch="0" ver="0^20241009git669c882" rel="1.el9"/>\n    </rpm:provides>\n  </format>\n</package>\n', filelists='<package pkgid="53904ab8f430da71cf506f6e6b1a6bb0a1589fdca7c0853affd2c66494d2e0dd" name="pythoncapi-compat-devel" arch="noarch">\n  <version epoch="0" ver="0^20241009git669c882" rel="1.el9"/>\n  <file>/usr/include/pythoncapi_compat.h</file>\n  <file type="dir">/usr/share/licenses/pythoncapi-compat-devel</file>\n  <file>/usr/share/licenses/pythoncapi-compat-devel/COPYING</file>\n</package>\n', other='<package pkgid="53904ab8f430da71cf506f6e6b1a6bb0a1589fdca7c0853affd2c66494d2e0dd" name="pythoncapi-compat-devel" arch="noarch">\n  <version epoch="0" ver="0^20241009git669c882" rel="1.el9"/>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240408gitccea884-1" date="1712664000">- Update to 0^20240408git01341ac: Fix PyDict_SetDefaultRef() definition</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240522git9d14fad-1" date="1716552000">- Update to 0^20240522git9d14fad: Fix test_frame() on Python 3.13 beta 1</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240603git18d1df7-1" date="1717588800">- Update to 0^20240603git18d1df7: Add `PyLong_GetSign()`.</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240708gitea1f7f6-1" date="1720699200">- Update to 0^20240708gitea1f7f6\n- `PyLong_GetSign` will be added in 3.14.0a0</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240718git4094c64-1" date="1721390400">- Update to 0^20240718git4094c64\n- Add PyUnicodeWriter API</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240806git39e2663-1" date="1722945600">- Update to 0^20240806git39e2663\n- Add `static inline` to `PyUnicodeWriter_WriteStr()` and\n  `PyUnicodeWriter_WriteRepr()`.</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240826git2d18aec-1" date="1724673600">- Update to 0^20240826git2d18aec\n- Add critical section API</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20240923gitd20d7f8-1" date="1727179200">- Update to 0^20240923gitd20d7f8\n- Fix incorrect use of assignment in place of an equality test.</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20241008gitbb0934e-1" date="1728561600">- Update to 0^20241008gitbb0934e\n- Document PyUnicodeWriter API</changelog>\n  <changelog author="Benjamin A. Beasley &lt;code@musicinmybrain.net&gt; - 0^20241009git669c882-1" date="1728561601">- Update to 0^20241009git669c882\n- Add `PyUnicode_Equal()` function\n- Add `PyBytes_Join()` function\n- Add `Py_HashBuffer()` function\n- Add `PyIter_NextItem()` function\n- Add `PyLong_FromUInt64()` and `PyLong_AsUInt64()`</changelog>\n</package>\n')
