# @generated
load("@antlir//antlir/antlir2/package_managers/dnf/rules:rpm.bzl", "rpm")
load("@antlir//antlir/antlir2/package_managers/dnf/rules:xml.bzl", "xml")
rpm(name='0-1.27-1.el9.i686', rpm_name='libdwarves1', epoch=0, version='1.27', release='1.el9', arch='i686', url='https://mirror.facebook.net/centos-composes/9/CentOS-Stream-9-20240816.0/compose/AppStream/x86_64/os/Packages/libdwarves1-1.27-1.el9.i686.rpm', xml=':0-1.27-1.el9.i686--xml', sha1=None, sha256='c80a96c0c352d6819555ff429b66b45227c268e6a5141251bb8bb4adb4936be7', visibility=['//snapshot/rpm/centos9/...'])
xml(name='0-1.27-1.el9.i686--xml', primary='<package type="rpm">\n  <name>libdwarves1</name>\n  <arch>i686</arch>\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <checksum type="sha256" pkgid="YES">c80a96c0c352d6819555ff429b66b45227c268e6a5141251bb8bb4adb4936be7</checksum>\n  <summary>Debugging information  processing library</summary>\n  <description>Debugging information processing library.</description>\n  <packager>builder@centos.org</packager>\n  <url>http://acmel.wordpress.com</url>\n  <time file="1719207957" build="1718950883"/>\n  <size package="106708" installed="231870" archive="233788"/>\n  <location href="Packages/c80a96c0c352d6819555ff429b66b45227c268e6a5141251bb8bb4adb4936be7/libdwarves1-0:1.27-1.el9.i686.rpm"/>\n  <format>\n    <rpm:license>GPLv2</rpm:license>\n    <rpm:vendor>CentOS</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>x86-02.stream.rdu2.redhat.com</rpm:buildhost>\n    <rpm:sourcerpm>dwarves-1.27-1.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="5624" end="13965"/>\n    <rpm:provides>\n      <rpm:entry name="libdwarves.so.1"/>\n      <rpm:entry name="libdwarves1" flags="EQ" epoch="0" ver="1.27" rel="1.el9"/>\n      <rpm:entry name="libdwarves1(x86-32)" flags="EQ" epoch="0" ver="1.27" rel="1.el9"/>\n      <rpm:entry name="libdwarves_emit.so.1"/>\n      <rpm:entry name="libdwarves_reorganize.so.1"/>\n    </rpm:provides>\n    <rpm:requires>\n      <rpm:entry name="libbpf.so.1"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.0.1)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.1.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.2.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.3.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.4.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.6.0)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.0.0)"/>\n      <rpm:entry name="libdw.so.1"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.122)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.130)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.138)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.143)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.148)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.157)"/>\n      <rpm:entry name="libelf.so.1"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.0)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.3)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.4)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.5)"/>\n      <rpm:entry name="libz.so.1"/>\n      <rpm:entry name="rtld(GNU_HASH)"/>\n      <rpm:entry name="libc.so.6(GLIBC_2.34)"/>\n    </rpm:requires>\n  </format>\n</package>\n', filelists='<package pkgid="c80a96c0c352d6819555ff429b66b45227c268e6a5141251bb8bb4adb4936be7" name="libdwarves1" arch="i686">\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <file type="dir">/usr/lib/.build-id</file>\n  <file type="dir">/usr/lib/.build-id/63</file>\n  <file>/usr/lib/.build-id/63/80a48dc3ca5d5d76efd146aa3a5b908841568f</file>\n  <file type="dir">/usr/lib/.build-id/df</file>\n  <file>/usr/lib/.build-id/df/193d2298e39528bf7e04eb37e5751356fa9152</file>\n  <file>/usr/lib/.build-id/df/93e77f4e2bdb8b759e69e979a90b5456b2c21c</file>\n  <file>/usr/lib/libdwarves.so.1</file>\n  <file>/usr/lib/libdwarves.so.1.0.0</file>\n  <file>/usr/lib/libdwarves_emit.so.1</file>\n  <file>/usr/lib/libdwarves_emit.so.1.0.0</file>\n  <file>/usr/lib/libdwarves_reorganize.so.1</file>\n  <file>/usr/lib/libdwarves_reorganize.so.1.0.0</file>\n</package>\n', other='<package pkgid="c80a96c0c352d6819555ff429b66b45227c268e6a5141251bb8bb4adb4936be7" name="libdwarves1" arch="i686">\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.24-1" date="1667563200">- Resolves: rhbz#2140020\n- New release: v1.23\n- Process DW_TAG_LLVM_annotation tags.\n- Initial support for DW_TAG_skeleton_unit.\n- Encode BTF_KIND_TYPE_TAG and BTF_KIND_DECL_TAG\n- Fix handling of percpu symbols on s390.\n- Use cacheline size to infer struct member alignment from BTF.\n- Add --skip_missing to not stop when not finding one of -C arguments.\n- Fix __attribute__((__aligned__(N)) printing alignment for struct members.\n- Fix nested __attribute__(__aligned__(N)) struct printing order.\n- New release: v1.24\n- Add support to BTF_KIND_ENUM64.\n- Support multithreaded BTF encoding.\n- Encode char type as signed in BTF.\n- Introduce --lang and --lang_exclude to pahole.\n- Introduce --compile to pahole.\n- Don\'t segfault when processing bogus files.</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.24-2" date="1668600000">- Backport BTF fix needed for kernel kfuncs\n- Related: rhbz#2140020</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.25-1" date="1686744000">- Resolves: rhbz#2190484\n- Build with system libbpf\n- New release: v1.25\n- Support for DW_TAG_unspecified_type more generally.\n- Make sure struct member offsets are in ascending order. Rust BTF needs this.\n- Support C atomic types (DW_TAG_atomic_type).\n- Initial support for DW_TAG_LLVM_annotation, used for BTF type tags, for __rcu, __user, etc\n- Exclude functions with the same name (static functions in different CUs), inconsistent prototypes or not following calling convention.\n- Allow generation of BTF for optimized functions, those that end with a .isra*, .constprop*.\n- Support \'pahole --lang=/--lang_exclude=asm\'\n- Support --compile from DWARF in addition to from BTF.\n- Exclude RUST CUs in \'btfdiff\', as those are not yet being BTF encoded.</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.27-1" date="1718884800">- Resolves: RHEL-30780\n- New release: v1.26\n- When expanding types using \'pahole -E\' do it for union and struct typedefs and for enums too.\n- Print number of holes, bit holes and bit paddings in class member types.\n- Introduce --contains_enumerator=ENUMERATOR_NAME:\n- Fix pretty printing using DWARF, waiting for a CU with both class (-C) and a specified "type_enum".\n- Add support for DW_TAG_constant in the DWARF loader, first seen in Go DWARF.\n- Fix loading DW_TAG_subroutine_type generated by the Go compiler.\n- Fix loading of 32-bit signed enums from BTF.\n- Add \'pahole --btf_features\' to allow consumers to specify an opt-in set of features they want to use in BTF encoding.\n- Parallelize loading BTF and DWARF, speeding up a bit btfdiff.\n- Do type expansion to cover "private" types and enumerations in btfdiff.\n- New release: v1.27\n- Reproducible parallel builds: multiple runs with different number of loading/encoding threads produce the same result.\n- Inject kfunc decl tags into BTF from the BTF IDs ELF section in the Linux kernel vmlinux file.\n- Sanitize unsupported DWARF int type with greater-than-16 byte, as BTF doesn\'t support it.\n- Initial support for BTF_KIND_DECL_TAG in the BTF loader, adding support in pfunct output.\n- Fix hole discovery with inheritance in C++.</changelog>\n</package>\n')
rpm(name='0-1.27-1.el9.x86_64', rpm_name='libdwarves1', epoch=0, version='1.27', release='1.el9', arch='x86_64', url='https://mirror.facebook.net/centos-composes/9/CentOS-Stream-9-20240816.0/compose/AppStream/x86_64/os/Packages/libdwarves1-1.27-1.el9.x86_64.rpm', xml=':0-1.27-1.el9.x86_64--xml', sha1=None, sha256='e88eb5f82a07174898e6a5eb4d451febbc31ce5c3418acb3e30041ce687aa8e4', visibility=['//snapshot/rpm/centos9/...'])
xml(name='0-1.27-1.el9.x86_64--xml', primary='<package type="rpm">\n  <name>libdwarves1</name>\n  <arch>x86_64</arch>\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <checksum type="sha256" pkgid="YES">e88eb5f82a07174898e6a5eb4d451febbc31ce5c3418acb3e30041ce687aa8e4</checksum>\n  <summary>Debugging information  processing library</summary>\n  <description>Debugging information processing library.</description>\n  <packager>builder@centos.org</packager>\n  <url>http://acmel.wordpress.com</url>\n  <time file="1719207957" build="1718950891"/>\n  <size package="99591" installed="221500" archive="223572"/>\n  <location href="Packages/e88eb5f82a07174898e6a5eb4d451febbc31ce5c3418acb3e30041ce687aa8e4/libdwarves1-0:1.27-1.el9.x86_64.rpm"/>\n  <format>\n    <rpm:license>GPLv2</rpm:license>\n    <rpm:vendor>CentOS</rpm:vendor>\n    <rpm:group>Unspecified</rpm:group>\n    <rpm:buildhost>x86-04.stream.rdu2.redhat.com</rpm:buildhost>\n    <rpm:sourcerpm>dwarves-1.27-1.el9.src.rpm</rpm:sourcerpm>\n    <rpm:header-range start="5624" end="14197"/>\n    <rpm:provides>\n      <rpm:entry name="libdwarves.so.1()(64bit)"/>\n      <rpm:entry name="libdwarves1" flags="EQ" epoch="0" ver="1.27" rel="1.el9"/>\n      <rpm:entry name="libdwarves1(x86-64)" flags="EQ" epoch="0" ver="1.27" rel="1.el9"/>\n      <rpm:entry name="libdwarves_emit.so.1()(64bit)"/>\n      <rpm:entry name="libdwarves_reorganize.so.1()(64bit)"/>\n    </rpm:provides>\n    <rpm:requires>\n      <rpm:entry name="libbpf.so.1()(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.0.1)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.1.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.2.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.3.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.4.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_0.6.0)(64bit)"/>\n      <rpm:entry name="libbpf.so.1(LIBBPF_1.0.0)(64bit)"/>\n      <rpm:entry name="libdw.so.1()(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.122)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.130)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.138)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.143)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.148)(64bit)"/>\n      <rpm:entry name="libdw.so.1(ELFUTILS_0.157)(64bit)"/>\n      <rpm:entry name="libelf.so.1()(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.0)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.3)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.4)(64bit)"/>\n      <rpm:entry name="libelf.so.1(ELFUTILS_1.5)(64bit)"/>\n      <rpm:entry name="libz.so.1()(64bit)"/>\n      <rpm:entry name="rtld(GNU_HASH)"/>\n      <rpm:entry name="libc.so.6(GLIBC_2.34)(64bit)"/>\n    </rpm:requires>\n  </format>\n</package>\n', filelists='<package pkgid="e88eb5f82a07174898e6a5eb4d451febbc31ce5c3418acb3e30041ce687aa8e4" name="libdwarves1" arch="x86_64">\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <file type="dir">/usr/lib/.build-id</file>\n  <file type="dir">/usr/lib/.build-id/5f</file>\n  <file>/usr/lib/.build-id/5f/5ee756a680f20d44ef9190f0497c1ec9e6c9cf</file>\n  <file type="dir">/usr/lib/.build-id/82</file>\n  <file>/usr/lib/.build-id/82/333740bf051a2cb5bcd090d2c939a1d05e5fed</file>\n  <file type="dir">/usr/lib/.build-id/aa</file>\n  <file>/usr/lib/.build-id/aa/f1da52d5fc7e5339046cd519ea0173010a1428</file>\n  <file>/usr/lib64/libdwarves.so.1</file>\n  <file>/usr/lib64/libdwarves.so.1.0.0</file>\n  <file>/usr/lib64/libdwarves_emit.so.1</file>\n  <file>/usr/lib64/libdwarves_emit.so.1.0.0</file>\n  <file>/usr/lib64/libdwarves_reorganize.so.1</file>\n  <file>/usr/lib64/libdwarves_reorganize.so.1.0.0</file>\n</package>\n', other='<package pkgid="e88eb5f82a07174898e6a5eb4d451febbc31ce5c3418acb3e30041ce687aa8e4" name="libdwarves1" arch="x86_64">\n  <version epoch="0" ver="1.27" rel="1.el9"/>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.24-1" date="1667563200">- Resolves: rhbz#2140020\n- New release: v1.23\n- Process DW_TAG_LLVM_annotation tags.\n- Initial support for DW_TAG_skeleton_unit.\n- Encode BTF_KIND_TYPE_TAG and BTF_KIND_DECL_TAG\n- Fix handling of percpu symbols on s390.\n- Use cacheline size to infer struct member alignment from BTF.\n- Add --skip_missing to not stop when not finding one of -C arguments.\n- Fix __attribute__((__aligned__(N)) printing alignment for struct members.\n- Fix nested __attribute__(__aligned__(N)) struct printing order.\n- New release: v1.24\n- Add support to BTF_KIND_ENUM64.\n- Support multithreaded BTF encoding.\n- Encode char type as signed in BTF.\n- Introduce --lang and --lang_exclude to pahole.\n- Introduce --compile to pahole.\n- Don\'t segfault when processing bogus files.</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.24-2" date="1668600000">- Backport BTF fix needed for kernel kfuncs\n- Related: rhbz#2140020</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.25-1" date="1686744000">- Resolves: rhbz#2190484\n- Build with system libbpf\n- New release: v1.25\n- Support for DW_TAG_unspecified_type more generally.\n- Make sure struct member offsets are in ascending order. Rust BTF needs this.\n- Support C atomic types (DW_TAG_atomic_type).\n- Initial support for DW_TAG_LLVM_annotation, used for BTF type tags, for __rcu, __user, etc\n- Exclude functions with the same name (static functions in different CUs), inconsistent prototypes or not following calling convention.\n- Allow generation of BTF for optimized functions, those that end with a .isra*, .constprop*.\n- Support \'pahole --lang=/--lang_exclude=asm\'\n- Support --compile from DWARF in addition to from BTF.\n- Exclude RUST CUs in \'btfdiff\', as those are not yet being BTF encoded.</changelog>\n  <changelog author="Viktor Malik &lt;vmalik@redhat.com&gt; - 1.27-1" date="1718884800">- Resolves: RHEL-30780\n- New release: v1.26\n- When expanding types using \'pahole -E\' do it for union and struct typedefs and for enums too.\n- Print number of holes, bit holes and bit paddings in class member types.\n- Introduce --contains_enumerator=ENUMERATOR_NAME:\n- Fix pretty printing using DWARF, waiting for a CU with both class (-C) and a specified "type_enum".\n- Add support for DW_TAG_constant in the DWARF loader, first seen in Go DWARF.\n- Fix loading DW_TAG_subroutine_type generated by the Go compiler.\n- Fix loading of 32-bit signed enums from BTF.\n- Add \'pahole --btf_features\' to allow consumers to specify an opt-in set of features they want to use in BTF encoding.\n- Parallelize loading BTF and DWARF, speeding up a bit btfdiff.\n- Do type expansion to cover "private" types and enumerations in btfdiff.\n- New release: v1.27\n- Reproducible parallel builds: multiple runs with different number of loading/encoding threads produce the same result.\n- Inject kfunc decl tags into BTF from the BTF IDs ELF section in the Linux kernel vmlinux file.\n- Sanitize unsupported DWARF int type with greater-than-16 byte, as BTF doesn\'t support it.\n- Initial support for BTF_KIND_DECL_TAG in the BTF loader, adding support in pfunct output.\n- Fix hole discovery with inheritance in C++.</changelog>\n</package>\n')
